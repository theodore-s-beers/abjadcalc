{
  "version": 3,
  "sources": ["../typescript/index-main.ts"],
  "sourcesContent": ["// Define variable for input field\nconst getInput = document.getElementById('abjad-text') as HTMLInputElement\n\n// Define variable for result pane\nconst result = document.getElementById('result') as HTMLElement\n\nfunction getAbjad (): void {\n  // Set two new versions of input text\n  // One has all whitespace stripped for calculating abjad value\n  // The other is cleaned up for re-display\n  const inputForCalc = getInput.value.replace(/\\s+/g, '')\n  const inputForDisplay: string = getInput.value.replace(/\\s+/g, ' ').trim()\n\n  // Define variables for option checkboxes\n  const hamzahCheckbox = document.getElementById(\n    'hamzah-check'\n  ) as HTMLInputElement\n  const maghribiCheckbox = document.getElementById(\n    'maghribi-check'\n  ) as HTMLInputElement\n\n  // Define a total to keep track of the abjad value, and an iterator\n  let total = 0\n  let i = 0\n\n  // Prepare the text of the result pane\n  result.innerHTML =\n    \"The total <em>abjad</em> value of <span class='replay-input' dir='rtl' lang='ar'>\u00AB\" +\n    inputForDisplay +\n    '\u00BB</span> is'\n\n  // Here we go! Run through the cleaned input, one character at a time\n  // Check for matches with Arabic-script letters\n  // Add relevant abjad values to the total\n  for (i = 0; i < inputForCalc.length; i += 1) {\n    if (\n      inputForCalc.charAt(i) === '\u0627' ||\n      inputForCalc.charAt(i) === '\u0622' ||\n      inputForCalc.charAt(i) === '\u0623' ||\n      inputForCalc.charAt(i) === '\u0625' ||\n      inputForCalc.charAt(i) === '\u0671'\n    ) {\n      total += 1\n    } else if (inputForCalc.charAt(i) === '\u0621') {\n      if (hamzahCheckbox.checked) {\n        continue\n      } else {\n        total += 1\n      }\n    } else if (\n      inputForCalc.charAt(i) === '\u0628' ||\n      inputForCalc.charAt(i) === '\u067E'\n    ) {\n      total += 2\n    } else if (\n      inputForCalc.charAt(i) === '\u062C' ||\n      inputForCalc.charAt(i) === '\u0686'\n    ) {\n      total += 3\n    } else if (inputForCalc.charAt(i) === '\u062F') {\n      total += 4\n    } else if (\n      inputForCalc.charAt(i) === '\u0647' ||\n      inputForCalc.charAt(i) === '\u0629' ||\n      inputForCalc.charAt(i) === '\u06C0'\n    ) {\n      total += 5\n    } else if (\n      inputForCalc.charAt(i) === '\u0648' ||\n      inputForCalc.charAt(i) === '\u0624'\n    ) {\n      total += 6\n    } else if (\n      inputForCalc.charAt(i) === '\u0632' ||\n      inputForCalc.charAt(i) === '\u0698'\n    ) {\n      total += 7\n    } else if (inputForCalc.charAt(i) === '\u062D') {\n      total += 8\n    } else if (inputForCalc.charAt(i) === '\u0637') {\n      total += 9\n    } else if (\n      inputForCalc.charAt(i) === '\u06CC' ||\n      inputForCalc.charAt(i) === '\u0649' ||\n      inputForCalc.charAt(i) === '\u064A' ||\n      inputForCalc.charAt(i) === '\u0626'\n    ) {\n      total += 10\n    } else if (\n      inputForCalc.charAt(i) === '\u06A9' ||\n      inputForCalc.charAt(i) === '\u06AF' ||\n      inputForCalc.charAt(i) === '\u0643'\n    ) {\n      total += 20\n    } else if (inputForCalc.charAt(i) === '\u0644') {\n      total += 30\n    } else if (inputForCalc.charAt(i) === '\u0645') {\n      total += 40\n    } else if (inputForCalc.charAt(i) === '\u0646') {\n      total += 50\n    } else if (inputForCalc.charAt(i) === '\u0633') {\n      if (maghribiCheckbox.checked) {\n        total += 300\n      } else {\n        total += 60\n      }\n    } else if (inputForCalc.charAt(i) === '\u0639') {\n      total += 70\n    } else if (inputForCalc.charAt(i) === '\u0641') {\n      total += 80\n    } else if (inputForCalc.charAt(i) === '\u0635') {\n      if (maghribiCheckbox.checked) {\n        total += 60\n      } else {\n        total += 90\n      }\n    } else if (inputForCalc.charAt(i) === '\u0642') {\n      total += 100\n    } else if (inputForCalc.charAt(i) === '\u0631') {\n      total += 200\n    } else if (inputForCalc.charAt(i) === '\u0634') {\n      if (maghribiCheckbox.checked) {\n        total += 1000\n      } else {\n        total += 300\n      }\n    } else if (inputForCalc.charAt(i) === '\u062A') {\n      total += 400\n    } else if (inputForCalc.charAt(i) === '\u062B') {\n      total += 500\n    } else if (inputForCalc.charAt(i) === '\u062E') {\n      total += 600\n    } else if (inputForCalc.charAt(i) === '\u0630') {\n      total += 700\n    } else if (inputForCalc.charAt(i) === '\u0636') {\n      if (maghribiCheckbox.checked) {\n        total += 90\n      } else {\n        total += 800\n      }\n    } else if (inputForCalc.charAt(i) === '\u0638') {\n      if (maghribiCheckbox.checked) {\n        total += 800\n      } else {\n        total += 900\n      }\n    } else if (inputForCalc.charAt(i) === '\u063A') {\n      if (maghribiCheckbox.checked) {\n        total += 900\n      } else {\n        total += 1000\n      }\n    } else if (inputForCalc.charAt(i) === '\\u200C') {\n      continue\n    } else {\n      // If the character wasn't recognized, add an error message\n      result.innerHTML =\n        \"At least one of the characters entered was not recognized and has been ignored.<br>That said, the computed <em>abjad</em> value of <span class='replay-input' dir='rtl' lang='ar'>\u00AB\" +\n        inputForDisplay +\n        '\u00BB</span> is'\n      continue\n    }\n  }\n\n  // Add the final total to the text of the result pane\n  result.innerHTML += ' ' + total.toString() + '.'\n\n  // Remove focus from input field\n  getInput.blur()\n}\n\n//\n// NEW MISCELLANY\n//\n\nfunction submitOnEnter (event: KeyboardEvent): void {\n  if (event.key === 'Enter' && !event.shiftKey) {\n    getAbjad()\n    event.preventDefault()\n  }\n}\n\ngetInput.addEventListener('keydown', submitOnEnter)\n\nconst submitButton = document.getElementById(\n  'submit-button'\n) as HTMLInputElement\nsubmitButton.addEventListener('click', getAbjad)\n\nconst resetButton = document.getElementById('reset-button') as HTMLInputElement\nresetButton.addEventListener('click', function () {\n  result.innerHTML = 'The total <em>abjad</em> value of \u2026 is \u2026'\n})\n"],
  "mappings": "AACA,KAAM,UAAW,SAAS,eAAe,cAGnC,OAAS,SAAS,eAAe,UAEvC,mBAA2B,CAIzB,KAAM,GAAe,SAAS,MAAM,QAAQ,OAAQ,IAC9C,EAA0B,SAAS,MAAM,QAAQ,OAAQ,KAAK,OAG9D,EAAiB,SAAS,eAC9B,gBAEI,EAAmB,SAAS,eAChC,kBAIF,GAAI,GAAQ,EACR,EAAI,EAWR,IARA,OAAO,UACL,wFACA,EACA,iBAKG,EAAI,EAAG,EAAI,EAAa,OAAQ,GAAK,EACxC,GACE,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,UACA,EAAa,OAAO,KAAO,SAAK,CACzC,GAAI,EAAe,QACjB,SAEA,GAAS,UAGX,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,UAET,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,UACA,EAAa,OAAO,KAAO,SACpC,GAAS,UAET,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,UAET,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,UAET,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,UACA,EAAa,OAAO,KAAO,SACpC,GAAS,UACA,EAAa,OAAO,KAAO,SACpC,GAAS,UAET,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,WAET,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,UAC3B,EAAa,OAAO,KAAO,SAE3B,GAAS,WACA,EAAa,OAAO,KAAO,SACpC,GAAS,WACA,EAAa,OAAO,KAAO,SACpC,GAAS,WACA,EAAa,OAAO,KAAO,SACpC,GAAS,WACA,EAAa,OAAO,KAAO,SACpC,AAAI,EAAiB,QACnB,GAAS,IAET,GAAS,WAEF,EAAa,OAAO,KAAO,SACpC,GAAS,WACA,EAAa,OAAO,KAAO,SACpC,GAAS,WACA,EAAa,OAAO,KAAO,SACpC,AAAI,EAAiB,QACnB,GAAS,GAET,GAAS,WAEF,EAAa,OAAO,KAAO,SACpC,GAAS,YACA,EAAa,OAAO,KAAO,SACpC,GAAS,YACA,EAAa,OAAO,KAAO,SACpC,AAAI,EAAiB,QACnB,GAAS,IAET,GAAS,YAEF,EAAa,OAAO,KAAO,SACpC,GAAS,YACA,EAAa,OAAO,KAAO,SACpC,GAAS,YACA,EAAa,OAAO,KAAO,SACpC,GAAS,YACA,EAAa,OAAO,KAAO,SACpC,GAAS,YACA,EAAa,OAAO,KAAO,SACpC,AAAI,EAAiB,QACnB,GAAS,GAET,GAAS,YAEF,EAAa,OAAO,KAAO,SACpC,AAAI,EAAiB,QACnB,GAAS,IAET,GAAS,YAEF,EAAa,OAAO,KAAO,SACpC,AAAI,EAAiB,QACnB,GAAS,IAET,GAAS,QAEN,IAAI,EAAa,OAAO,KAAO,SACpC,SAGA,OAAO,UACL,yLACA,EACA,iBACF,SAKJ,OAAO,WAAa,IAAM,EAAM,WAAa,IAG7C,SAAS,OAOX,uBAAwB,EAA4B,CAClD,AAAI,EAAM,MAAQ,SAAW,CAAC,EAAM,UAClC,YACA,EAAM,kBAIV,SAAS,iBAAiB,UAAW,eAErC,KAAM,cAAe,SAAS,eAC5B,iBAEF,aAAa,iBAAiB,QAAS,UAEvC,KAAM,aAAc,SAAS,eAAe,gBAC5C,YAAY,iBAAiB,QAAS,UAAY,CAChD,OAAO,UAAY",
  "names": []
}
